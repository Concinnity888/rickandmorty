{"version":3,"sources":["components/Header/index.js","components/CardCharacter/index.js","pages/HomePage/index.js","pages/CharacterPage/index.js","App.js","index.js"],"names":["Header","className","CardCharacter","props","isFullDescription","fullDescription","status","to","src","image","alt","name","id","species","gender","location","onClick","HomePage","data","onClickLink","map","item","CharacterPage","character","App","useState","setData","currentPage","setCurrentPage","loading","setLoading","currentCharacter","setCurrentCharacter","totalCount","setTotalCount","useEffect","axios","get","then","response","results","prevState","info","count","catch","error","console","log","finally","handleScroll","evt","target","documentElement","scrollHeight","scrollTop","window","innerHeight","length","document","addEventListener","removeEventListener","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.593b8e18.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1 className=\"Header__title\">The Rick and Morty</h1>\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './style.css';\r\n\r\nexport const CardCharacter = (props) => {\r\n  let isFullDescription = props.fullDescription;\r\n  let status = props.status === 'Alive' || props.status === 'Dead' ? props.status : false;\r\n  const objStatus = {\r\n    'Alive': 'CardCharacter__status_green',\r\n    'Dead': 'CardCharacter__status_red'\r\n  }\r\n\r\n  return (\r\n    <article className={`CardCharacter${isFullDescription ? ' CardCharacter_big' : ''}`}>\r\n      {isFullDescription && <Link className=\"ButtonBack\" to=\"/\">Назад</Link>}\r\n\r\n      <img className=\"CardCharacter__image\" src={props.image} alt={props.name} id={props.id} />\r\n\r\n      {!isFullDescription ?\r\n        <Link className=\"CardCharacter__link\" to={`/character${props.id}`} onClick={props.onClick}>\r\n          <h2 className=\"CardCharacter__name\">{props.name}</h2>\r\n        </Link>\r\n        :\r\n        <div className=\"CardCharacter__desc\">\r\n          <div>\r\n            <h2 className=\"CardCharacter__name CardCharacter__name_small\">{props.name}</h2>\r\n            <div className=\"CardCharacter__wrap-status\">\r\n              {status && <span className={`CardCharacter__status ${objStatus[status]}`}>{props.status} - </span>}\r\n              <span>{props.species}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <dl>\r\n            <dt>Gender</dt>\r\n            <dd>{props.gender}</dd>\r\n\r\n            <dt>Location</dt>\r\n            <dd>{props.location}</dd>\r\n          </dl>\r\n        </div>\r\n      }\r\n    </article>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { CardCharacter } from '../../components/CardCharacter';\r\n\r\nimport './style.css';\r\n\r\nexport const HomePage = ({ data, onClickLink }) => {\r\n  return (\r\n    <ul className=\"ListCharacters\">\r\n      {data && data.map(item => (\r\n        <li className=\"ListCharacters__item\" key={item.id}>\r\n          <CardCharacter name={item.name} image={item.image} id={item.id} onClick={() => onClickLink(item)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { CardCharacter } from '../../components/CardCharacter';\r\n\r\nexport const CharacterPage = ({ character }) => {\r\n  return (\r\n    <div>\r\n      {character && <CardCharacter name={character.name} image={character.image} status={character.status} species={character.species} gender={character.gender} location={character.location.name} fullDescription />}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage';\nimport { CharacterPage } from './pages/CharacterPage';\n\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [currentCharacter, setCurrentCharacter] = useState();\n  const [totalCount, setTotalCount] = useState(0);\n\n  function handleGetCharacter (character) {\n    setCurrentCharacter(character);\n  }\n\n  useEffect(() => {\n    if (loading) {\n      axios.get(`https://rickandmortyapi.com/api/character/?page=${currentPage}`)\n        .then(response => {\n          setData([...data, ...response.data.results]);\n          setCurrentPage(prevState => prevState + 1);\n          setTotalCount(response.data.info.count);\n        })\n        .catch(error => console.log(error))\n        .finally(() => setLoading(false));\n    }\n  }, [loading]);\n\n  const handleScroll = (evt) => {\n    if (evt.target.documentElement.scrollHeight - (evt.target.documentElement.scrollTop + window.innerHeight) < 100 && data.length < totalCount) {\n      setLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('scroll', handleScroll);\n    return function () {\n      document.removeEventListener('scroll', handleScroll)\n    };\n  });\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n\n        <main className=\"Content\">\n          <Switch>\n            <Route path=\"/character:id\">\n              <CharacterPage character={currentCharacter} />\n            </Route>\n            <Route path=\"/\">\n              {data && <HomePage data={data} onClickLink={handleGetCharacter} />}\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}